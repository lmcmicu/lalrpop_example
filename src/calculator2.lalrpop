use std::str::FromStr;

grammar;

pub Expression = {
    Label,
    Function,
};

Label = {
    ALPHANUM,
    DQSTRING,
    SQSTRING,
};

Function: String = FunctionName "(" Arguments ")" => format!("{}{}{:?}{}", <>);
FunctionName = ALPHANUM;

Arguments = Comma<Argument>;
Comma<T>: Vec<T> = {
    <mut v:(<T> ",")*> <e:T> => {
        v.push(e);
        v
    }
};
Argument = {
    Label,
};

ALPHANUM: String = r"[a-zA-Z0-9-_]+" => String::from(<>);
DQSTRING: String = r#""([^"]|\\")*""# => String::from(<>);
SQSTRING: String = r#"'([^']|\\')*'"# => String::from(<>);
